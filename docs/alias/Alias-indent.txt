[Version]: 5.01
[Last Updated]: 20JUN2016
vZMA Alias File

Version 5.1: Erik Quinn (significant re-work)
Version 5.0: Fred Michaels, Ken Bambach and Mark Anderson
Version 4.1 & Prior: Nicholas Cavacini, Samuel Mason and Larry Wimble

********************************************************************************
                                    GENERAL
********************************************************************************
.ALT $uc($1) altimeter $altim($1).
.OOPS DISREGARD LAST TRANSMISSION. Stand by for correction...
.WIND wind $winds.
  .WS $uc($1) wind $wind($1).
.SHEAR wind shear advisories are in effect.
.MICRO microburst advisories are in effect.
.CON contact $radioname($1), $freq($1)
.WAKE caution wake turbulence.
.SI say indicated.
.SM say mach number.
.RON resume own navigation.
.CV do you copy voice?
.BRB ATTENTION ALL AIRCRAFT: $callsign will be away for approximately $1 minute(s).
.BACK $callsign has returned.
.PRC For explanations/questions/tips, please visit the VATSIM pilot resource center at www.vatsim.net/prc/
.TXT ATTENTION TEXT PILOTS: Please ALWAYS EXECUTE instructions first, then reply if able. Thank you!
.NEWATIS ATTENTION ALL AIRCRAFT: ATIS Information $uc($1) is now current at $uc($2). Wind $wind($2), $uc($2) altimeter $altim($2).
.CURATIS ATIS Information $uc($1) is current at $uc($2). Advise when you have $uc($1), $uc($2) altimeter $altim($2).
.CLOSING ****NOTAM: $radioname() will be closing in approximately $1 minutes*****
.CLOSED ****NOTAM: $radioname($1) CLOSED at $time. Monitor unicom 122.8****
.SG when able, say gate number.
.SP when able, say parking.



********************************************************************************
                               CLEARANCE DELIVERY
********************************************************************************
.COR clearance on request, stand by.
  .CORN clearance on request, stand by, number $1.
.IAFDOFW filed altitude of $cruise invalid for direction of flight. Please choose any EVEN altitude, and either advise this frequency of your choice, or re-file your flight plan.
  .IAFDOFE filed altitude of $cruise invalid for direction of flight. Please choose any ODD altitude, and either advise this frequency of your choice, or re-file your flight plan.
.CRAFT cleared to $arr airport as filed. Climb and maintain $1, expect $cruise one-zero minutes after departure, departure frequency $freq($2), squawk $squawk.
  .CRAFTU cleared to $arr airport as filed. Climb and maintain $1, expect $cruise one-zero minutes after departure. Departure control services are not available, squawk $squawk.
.CRAFTS cleared to $arr airport, $uc($1) departure, then as filed. Climb and maintain $2, expect $cruise one-zero minutes after departure, departure frequency $freq($3), squawk $squawk.
  .CRAFTSU cleared to $arr airport, $uc($1) departure, then as filed. Climb and maintain $2, expect $cruise one-zero minutes after departure. Departure control services are not available, squawk $squawk.
  .CRAFTSCVS cleared to $arr airport, $uc($1) departure, then as filed. Climb via SID, departure frequency $freq($2), squawk $squawk.
  .CRAFTSCVSE cleared to $arr airport, $uc($1) departure, then as filed. Climb via SID, except maintain $2. Expect $cruise one-zero minutes after departure, departure frequency $freq($3), squawk $squawk.
.CRAFTST cleared to $arr airport, $uc($1) departure, $uc($2) transition, then as filed. Climb and maintain $3,expect $cruise one-zero minutes after departure, departure frequency $freq($4), squawk $squawk.
  .CRAFTSTU cleared to $arr airport, $uc($1) departure, $uc($2) transition, then as filed. Climb and maintain $3, expect $cruise one-zero minutes after departure. Departure control services are not available, squawk $squawk.
  .CRAFTSTCVS cleared to $arr airport, $uc($1) departure, $uc($2) transition, then as filed. Climb via SID. Departure frequency $freq($3), squawk $squawk.
  .CRAFTSTCVSE cleared to $arr airport, $uc($1) departure, $uc($2) transition, then as filed. Climb via SID except maintain $3. Expect $cruise one-zero minutes after departure, departure frequency $freq($4), squawk $squawk.
.CRAFTV cleared to $arr airport via radar vectors $uc($1), then as filed. Climb and maintain $2, expect $cruise one-zero minutes after departure, departure frequency $freq($3), squawk $squawk.
  .CRAFTVU cleared to $arr airport via direct $uc($1), then as filed. Climb and maintain $2, expect $cruise one-zero minutes after departure. Departure control services are not available, squawk $squawk.
.DEPFREQ new departure frequency: $radioname($1) on $freq($1).
.DEPNA departure services are no longer available. After departure, monitor unicom 122.8.
.RBC readback correct. Push and start at pilot's discretion. Advise when ready to taxi.
  .RBCE readback correct. Push and start at pilot's discretion. Expect Runway $uc($1). Advise when ready to taxi.
  .RBCC readback correct. Push and start at pilot's discretion. Contact $radioname($1) on $freq($1) when ready to taxi.
  .RBCU readback correct. Push and start at pilot's discretion. Advise UNICOM on 122.800 when ready to taxi.
  .RBCHP readback correct. HOLD PUSH for traffic. Advise when ready to push.
    .RBCHPE readback correct. HOLD PUSH for traffic. Advise when ready to push. Expect Runway $uc($1).
  .RBCHPC readback correct. HOLD PUSH, and advise $radioname($1) on $freq($1) when ready to push.



********************************************************************************
                                    GROUND
********************************************************************************
----- General Taxi -----
.TLO turn LEFT on $uc($1).
  .TLOSP turn LEFT on $uc($1), say parking.
  .TLOCON turn LEFT on $uc($1), contact $radioname($2), $freq($2) when off.
  .TLOTP turn LEFT on $uc($1), taxi to parking via $uc($2).
  .TLOTPHS turn LEFT on $uc($1), taxi to parking via $uc($2), hold short of $uc($3).
  .TLOTPCR turn LEFT on $uc($1), taxi to parking via $uc($2), cross Runway $uc($3).
.TRO turn RIGHT on $uc($1).
  .TROSP turn RIGHT on $uc($1), say parking.
  .TROCON turn RIGHT on $uc($1), contact $radioname($2), $freq($2) when off.
  .TROTP turn RIGHT on $uc($1), taxi to parking via $uc($2).
  .TROTPHS turn RIGHT on $uc($1), taxi to parking via $uc($2), hold short of $uc($3).
  .TROTPCR turn RIGHT on $uc($1), taxi to parking via $uc($2), cross Runway $uc($3).
.TV taxi via $uc($1).
  .TVHS taxi via $uc($1), hold short of $uc($2).
.TF follow the $uc($1) $uc($2) from the $uc($3).
  .TFHS follow the $uc($1) $uc($2) from the $uc($3), hold short of $uc($4).
.TSA taxi straight ahead.
  .TSAHS taxi straight ahead, hold short of $uc($1).

----- Departure Taxi -----
.TR Runway $uc($1), taxi via $uc($2).
  .TRHS Runway $uc($1), taxi via $uc($2), hold short of $uc($3).
  .TRCR Runway $uc($1), taxi via $uc($2), cross Runway $uc($3).
.TRF Runway $uc($1), follow the $uc($2) $uc($3) from the $uc($4).
  .TRFHS Runway $uc($1), follow the $uc($2) $uc($3) from the $uc($4). Hold short of $uc($5).
  .TRFCR Runway $uc($1), follow the $uc($2) $uc($3) from the $uc($4). Cross Runway $uc($5).

----- Arrival Taxi -----
.TP taxi to parking via $uc($1).
  .TPHS taxi to parking via $uc($1), hold short of $uc($2).
  .TPCR taxi to parking via $uc($1), cross Runway $uc($2).
.ER exit RIGHT when able, remain this frequency.
  .ERSG exit RIGHT when able, then say gate number.
  .ERSP exit RIGHT when able, then say parking.
  .ERCON exit RIGHT when able, then contact $radioname($1), $freq($1) when off.
  .ERTP exit RIGHT when able, then taxi to parking via $uc($1).
    .ERTPHS exit RIGHT when able, then taxi to parking via $uc($1), hold short of $uc($2).
    .ERTPCR exit RIGHT when able, then taxi to parking via $uc($1), cross Runway $uc($2).
  .ERTRO exit RIGHT when able, then turn RIGHT on $uc($1), remain this frequency.
    .ERTROSG exit RIGHT when able, then turn RIGHT on $uc($1), remain this frequency. When able, say gate number.
    .ERTROSP exit RIGHT when able, then turn RIGHT on $uc($1), remain this frequency. When able, say parking.
    .ERTROHS exit RIGHT when able, then turn RIGHT on $uc($1), hold short of $uc($2), remain this frequency.
      .ERTROHSSG exit RIGHT when able, then turn RIGHT on $uc($1), hold short of $uc($2), remain this frequency. When able, say gate number.
      .ERTROHSSP exit RIGHT when able, then turn RIGHT on $uc($1), hold short of $uc($2), remain this frequency. When able, say parking.
  .ERTLO exit RIGHT when able, then turn LEFT on $uc($1), remain this frequency.
    .ERTLOSG exit RIGHT when able, then turn LEFT on $uc($1), remain this frequency. When able, say gate number.
    .ERTLOSP exit RIGHT when able, then turn LEFT on $uc($1), remain this frequency. When able, say parking.
    .ERTLOHS exit RIGHT when able, then turn LEFT on $uc($1), hold short of $uc($2), remain this frequency.
      .ERTLOHSSG exit RIGHT when able, then turn LEFT on $uc($1), hold short of $uc($2), remain this frequency. When able, say gate number.
      .ERTLOHSSP exit RIGHT when able, then turn LEFT on $uc($1), hold short of $uc($2), remain this frequency. When able, say parking.
.EL exit LEFT when able, remain this frequency.
  .ELSG exit LEFT when able, then say gate number.
  .ELSP exit LEFT when able, then say parking.
  .ELCON exit LEFT when able, then contact $radioname($1), $freq($1) when off.
  .ELTP exit LEFT when able, then taxi to parking via $uc($1).
    .ELTPHS exit LEFT when able, then taxi to parking via $uc($1), hold short of $uc($2).
    .ELTPCR exit LEFT when able, then taxi to parking via $uc($1), cross Runway $uc($2).
  .ELTRO exit LEFT when able, then turn RIGHT on $uc($1), remain this frequency.
    .ELTROSG exit LEFT when able, then turn RIGHT on $uc($1), remain this frequency. When able, say gate number.
    .ELTROSP exit LEFT when able, then turn RIGHT on $uc($1), remain this frequency. When able, say parking.
    .ELTROHS exit LEFT when able, then turn RIGHT on $uc($1), hold short of $uc($2), remain this frequency.
      .ELTROHSSG exit LEFT when able, then turn RIGHT on $uc($1), hold short of $uc($2), remain this frequency. When able, say gate number.
      .ELTROHSSP exit LEFT when able, then turn RIGHT on $uc($1), hold short of $uc($2), remain this frequency. When able, say parking.
  .ELTLO exit LEFT when able, then turn LEFT on $uc($1), remain this frequency.
    .ELTLOSG exit LEFT when able, then turn LEFT on $uc($1), remain this frequency. When able, say gate number.
    .ELTLOSP exit LEFT when able, then turn LEFT on $uc($1), remain this frequency. When able, say parking.
    .ELTLOHS exit LEFT when able, then turn LEFT on $uc($1), hold short of $uc($2), remain this frequency.
      .ELTLOHSSG exit LEFT when able, then turn LEFT on $uc($1), hold short of $uc($2), remain this frequency. When able, say gate number.
      .ELTLOHSSP exit LEFT when able, then turn LEFT on $uc($1), hold short of $uc($2), remain this frequency. When able, say parking.

----- Crossing & Holding -----
.STOP hold position.
.HS hold short of $uc($1).
  .HSNT hold short of next taxiway.
.CR cross Runway $uc($1).
  .CRHS cross Runway $uc($1), hold short of $uc($2).
  .CRTV cross Runway $uc($1), taxi via $uc($2).
    .CRTVHS cross Runway $uc($1), taxi via $uc($2), hold short of $uc($3).
  .CRTF cross Runway $uc($1), follow the $uc($2) $uc($3) from the $uc($4).
    .CRTFHS cross Runway $uc($1), follow the $uc($2) $uc($3) from the $uc($4), hold short of $uc($5).
  .CRTP cross Runway $uc($1), taxi to parking via $uc($2).
.CT continue taxi.
  .CTP taxi to parking.
  .CTG taxi to the gate.
  .CTR taxi to the ramp.
  .CTHS continue taxi, hold short of $uc($1).

----- Ramp Control & Ground Metering -----
.HPT hold push for traffic.
.HPQ hold push, you are in the queue.
.HPQN hold push, you are number $1 in the queue.
.PUSH Push approved, face $uc($1). Advise when ready to taxi.
    .PUSHT Push approved, tail $uc($1). Advise when ready to taxi.
.PUSHC Push approved, face $uc($1). Contact $radioname($2) on $freq($2) when ready for taxi.
    .PUSHTC Push approved, tail $uc($1). Contact $radioname($2) on $freq($2) when ready for taxi.
.GMIE ATTENTION ALL AIRCRAFT: Ground metering is in effect. Contact $radioname($1) on $freq($1) when ready to push.

----- Progressive Taxi -----
.TLNT turn left next taxiway.
  .TLNTHS turn left next taxiway, hold short of $uc($1).
  .TLNTCR turn left next taxiway, cross Runway $uc($1).
.TRNT turn right next taxiway.
  .TRNTHS turn right next taxiway, hold short of $uc($1).
  .TRNTCR turn right next taxiway, cross Runway $uc($1).



********************************************************************************
                                    TOWER
********************************************************************************
----- Arrivals -----
.CL wind $winds, Runway $uc($1), cleared to land.
  .CLN wind $winds, Runway $uc($1), cleared to land, number $2.
    .CLNF wind $winds, Runway $uc($1), cleared to land, number $2, following a $uc($3) on a $4 mile final.
  .CLWTA wind $winds, Runway $uc($1), cleared to land. Caution wake turbulence arrived $uc($2).
  .CLWTD wind $winds, Runway $uc($1), cleared to land. Caution wake turbulence departed $uc($2).
  .CLWTAD wind $winds, Runway $uc($1), cleared to land. Caution wake turbulence arrived $uc($2), departed $uc($3).
  .CLTD wind $winds, Runway $uc($1), cleared to land, traffic departing.
    .CLTDP wind $winds, Runway $uc($1), cleared to land, traffic departing the parallel Runway $uc($2).
    .CLTDI wind $winds, Runway $uc($1), cleared to land, traffic departing the intersecting Runway $uc($2).
  .CLTA wind $winds, Runway $uc($1), cleared to land, traffic $2 mile final for Runway $uc($3).
    .CLTAP wind $winds, Runway $uc($1), cleared to land, traffic $2 mile final for the parallel Runway $uc($3).
    .CLTAI wind $winds, Runway $uc($1), cleared to land, traffic $2 mile final for intersecting Runway $uc($3).
  .CLTHP wind $winds, Runway $uc($1), cleared to land, traffic holding in position.
.CTU Runway $uc($1), continue.
  .CTUTD Runway $uc($1), continue, traffic departing prior to your arrival.
    .CTUMD Runway $uc($1), continue, $2 departures prior to your arrival.
  .CTUTHP Runway $uc($1), continue, traffic holding in position.
  .CTUTMP Runway $uc($1), continue, traffic moving into position.
.GA GO AROUND.
.MISS fly the missed approach as published.
.CG contact ground.
  .CGF contact ground, $1

----- Departures -----
.CTO wind $winds, Runway $uc($1), cleared for takeoff.
  .CTOWTD wind $winds, Runway $uc($1), cleared for takeoff. Caution wake turbulence departed $uc($2).
  .CTOR wind $winds, RNAV to $uc($1), Runway $uc($2), cleared for takeoff.
    .CTORWTD wind $winds, RNAV to $uc($1), Runway $uc($2), cleared for takeoff. Caution wake turbulence departed $uc($3).
  .CTOFH Fly heading $1, wind $winds, Runway $uc($2), cleared for takeoff.
    .CTOFHWTD Fly heading $1, wind $winds, Runway $uc($2), cleared for takeoff. Caution wake turbulence departed $uc($3).
  .CTOTRH Turn right heading $1, wind $winds, Runway $uc($2), cleared for takeoff.
    .CTOTRHWTD Turn right heading $1, wind $winds, Runway $uc($2), cleared for takeoff. Caution wake turbulence departed $uc($3).
  .CTOTLH Turn left heading $1, wind $winds, Runway $uc($2), cleared for takeoff.
    .CTOTLHWTD Turn left heading $1, wind $winds, Runway $uc($2), cleared for takeoff. Caution wake turbulence departed $uc($3).
.LUAW Runway $uc($1), line up and wait.
  .LUAWWT Runway $uc($1), line up and wait for wake turbulence.
  .LUAWTC Runway $uc($1), line up and wait, traffic crossing downfield.
  .LUAWTWC Runway $uc($1), line up and wait, traffic will cross downfield.
.HSTOF hold short, traffic $1 mile final.
.HSTOFI hold short, traffic $1 mile final for the intersecting Runway $2.
.HSWT hold short for wake turbulence.
.RTO CANCEL TAKEOFF CLEARANCE.
  .CTC CANCEL TAKEOFF CLEARANCE.
.CD contact departure.



********************************************************************************
                                      VFR
********************************************************************************
----- Departures -----
.VFRD departure to the $uc($1) is approved. Maintain VFR at or below $2, departure frequency $freq($3). Squawk $squawk.
  .VFRDSO straight-out departure approved.
  .VFRDLC left crosswind departure approved.
  .VFRDRC right crosswind departure approved.
  .VFRDLD left downwind departure approved.
  .VFRDRD right downwind departure approved.
.VFRDU departure to the $uc($1) is approved. Maintain VFR at or below $2, departure on UNICOM 122.80. Squawk $squawk.

----- Class Bravo Clearances -----
.VFRCOB cleared out of $uc($1) Bravo airspace to the $uc($2). Maintain VFR at or below $3. Departure frequency $freq($4). Squawk $squawk.
  .VFRCOBU cleared out of $uc($1) Bravo airspace to the $uc($2). Maintain VFR at or below $3. Departure on unicom, 122.8. Squawk $squawk.
  .VFRCIB cleared into $uc($1) Bravo airspace. Maintain VFR at or below $2.
    .VFRCIBH cleared into $uc($1) Bravo airspace. Maintain VFR at or below $2, enter controlled airspace heading $3.
  .VFRCTB cleared through $uc($1) Bravo airspace. Maintain VFR at or below $2.
    .VFRCTBH cleared through $uc($1) Bravo airspace. Maintain VFR at or below $2, enter controlled airspace heading $3.
  .VFRRCB REMAIN CLEAR of the $uc($1) Bravo airspace. Expect an update in $2 minutes.

----- Pattern Work / Arrivals -----
.LCTA left closed traffic approved.
  .RCTA right closed traffic approved.
.ELD enter left downwind Runway $uc($1).
  .ERD enter right downwind Runway $uc($1).
  .ELB enter left base Runway $uc($1).
  .ERB enter right base Runway $uc($1).
  .MSI make straight in Runway $uc($1).
.RMD report midfield downwind.
  .RPN report passing the numbers.
  .RTB report turning base.
  .RTF report turning final.
.ED extend downwind, I'll call your base.
.EU extend upwind, I'll call your crosswind.
.TC turn crosswind.
.TB turn base.
.COPT Runway $uc($1), cleared for the option.
  .CTG Runway $uc($1), cleared touch and go.
  .CLA Runway $uc($1), cleared low approach.




********************************************************************************
                                     RADAR
********************************************************************************
----- Transponder -----
.SS squawk standby.
.SN squawk normal.
.SMC squawk Mode C.
.ID squawk ident.
.SQ squawk $squawk.
.SQID squawk $squawk and ident.
.CSQ check transponder. Verify squawking $squawk.

.HIID $radioname(), squawk ident.
  .HISQ $radioname(), squawk $squawk.
    .HISQID $radioname(), squawk $squawk and ident.
.HIAID $radioname(), $uc($1) altimeter $altim($1), squawk ident.
  .HIASQ $radioname(), $uc($1) altimeter $altim($1), squawk $squawk.
    .HIASQID $radioname(), $uc($1) altimeter $altim($1), squawk $squawk and ident.

----- Radar Identification -----
.SA say altitude.
.RC radar contact.
  .RCSA radar contact, say altitude.
  .RCSAL radar contact, say altitude leaving.
  .RCPOS radar contact $dist($1) miles $bear($1) of $uc($1).
    .RCPOSSA radar contact $dist($1) miles $bear($1) of $uc($1), say altitude.
    .RCPOSSAL radar contact $dist($1) miles $bear($1) of $uc($1), say altitude leaving.

.HISA $radioname(), say altitude.
.HIRC $radioname(), radar contact.
  .HIRCSA $radioname(), radar contact, say altitude.
  .HIRCSAL $radioname(), radar contact, say altitude leaving.
  .HIRCPOS $radioname(), radar contact $dist($1) miles $bear($1) of $uc($1).
    .HIRCPOSSA $radioname(), radar contact $dist($1) miles $bear($1) of $uc($1), say altitude.
    .HIRCPOSSAL $radioname(), radar contact $dist($1) miles $bear($1) of $uc($1), say altitude leaving.
.HIASA $radioname(), $uc($1) altimeter $altim($1), say altitude.
.HIARC $radioname(), $uc($1) altimeter $altim($1), radar contact.
  .HIARCSA $radioname(), $uc($1) altimeter $altim($1), radar contact, say altitude.
  .HIARCSAL $radioname(), $uc($1) altimeter $altim($1), radar contact, say altitude leaving.
  .HIARCPOS $radioname(), $uc($1) altimeter $altim($1), radar contact $dist($2) miles $bear($2) of $uc($2).
    .HIARCPOSSA $radioname(), $uc($1) altimeter $altim($1), radar contact $dist($2) miles $bear($2) of $uc($2), say altitude.
    .HIARCPOSSAL $radioname(), $uc($1) altimeter $altim($1), radar contact $dist($2) miles $bear($2) of $uc($2), say altitude leaving.

----- Traffic Advisories -----
.TFC traffic $uc($1) o'clock, $2 miles, $uc($3), $uc($4), $5.
  .TFCC traffic $uc($1) o'clock, $2 miles, $uc($3), $uc($4), leaving $5, climbing to $6.
  .TFCD traffic $uc($1) o'clock, $2 miles, $uc($3), $uc($4), leaving $5, descending to $6.
  .TFCOD traffic $uc($1) o'clock, $2 miles, opposite direction, $uc($3), $4.
    .TFCODC traffic $uc($1) o'clock, $2 miles, opposite direction, $uc($3), leaving $4, climbing to $5.
    .TFCODD traffic $uc($1) o'clock, $2 miles, opposite direction, $uc($3), leaving $4, descending to $5.
  .TFCSD traffic $uc($1) o'clock, $2 miles, same direction, $uc($3), $4.
    .TFCSDC traffic $uc($1) o'clock, $2 miles, same direction, $uc($3), leaving $4, climbing to $5.
    .TFCSDD traffic $uc($1) o'clock, $2 miles, same direction, $uc($3), leaving $4, descending to $5.
  .TFCLR traffic $uc($1) o'clock, $2 miles, left to right, $uc($3), $4.
    .TFCLRC traffic $uc($1) o'clock, $2 miles, left to right, $uc($3), leaving $4, climbing to $5.
    .TFCLRD traffic $uc($1) o'clock, $2 miles, left to right, $uc($3), leaving $4, descending to $5.
  .TFCRL traffic $uc($1) o'clock, $2 miles, right to left, $uc($3), $4.
    .TFCRLC traffic $uc($1) o'clock, $2 miles, right to left, $uc($3), leaving $4, climbing to $5.
    .TFCRLD traffic $uc($1) o'clock, $2 miles, right to left, $uc($3), leaving $4, descending to $5.
.VSEP maintain visual separation from that traffic.

----- Satellite Ops -----
.HFR hold for release.
.RFD released for departure.
  .RFDH released for departure. Enter controlled airspace heading $1
  .RFDHA released for departure. Enter controlled airspace heading $1, maintain $2

----- Heading & Altitude Control Instructions -----
.FPH fly present heading.
  .FPHV fly present heading, vector $uc($1) Runway $uc($2) approach.
    .FPHVF fly present heading, vector to $uc($1) Runway $uc($2) final approach course.
  .FPHCM fly present heading, climb and maintain $1.
    .FPHCMV climb and maintain $1, fly present heading, vector $uc($2) Runway $uc($3) approach.
      .FPHCMVF climb and maintain $1, fly present heading, vector to $uc($2) Runway $uc($3) final approach course.
  .FPHDM fly present heading, descend and maintain $1.
    .FPHDMV descend and maintain $1, fly present heading, vector $uc($2) Runway $uc($3) approach.
      .FPHDMVF descend and maintain $1, fly present heading, vector to $uc($2) Runway $uc($3) final approach course.
.FH fly heading $1.
  .FHV fly heading $1, vector $uc($2) Runway $uc($3) approach.
    .FHVF fly heading $1, vector to $uc($2) Runway $uc($3) final approach course.
  .FHCM fly heading $1, climb and maintain $2.
    .FHCMV climb and maintain $2, fly heading $1, vector $uc($3) Runway $uc($4) approach.
      .FHCMVF climb and maintain $2, fly heading $1, vector to $uc($3) Runway $uc($4) final approach course.
  .FHDM fly heading $1, descend and maintain $2.
    .FHDMV descend and maintain $2, fly heading $1, vector $uc($3) Runway $uc($4) approach.
      .FHDMVF descend and maintain $2, fly heading $1, vector to $uc($3) Runway $uc($4) final approach course.
.TLH Turn left heading $1.
  .TLHV turn left heading $1, vector $uc($2) Runway $uc($3) approach.
    .TLHVF turn left heading $1, vector to $uc($2) Runway $uc($3) final approach course.
  .TLHCM turn left heading $1, climb and maintain $2.
    .TLHCMV climb and maintain $2, turn left heading $1, vector $uc($3) Runway $uc($4) approach.
      .TLHCMVF climb and maintain $2, turn left heading $1, vector to $uc($3) Runway $uc($4) final approach course.
  .TLHDM turn left heading $1, descend and maintain $2.
    .TLHDMV descend and maintain $2, turn left heading $1, vector $uc($3) Runway $uc($4) approach.
      .TLHDMVF descend and maintain $2, turn left heading $1, vector to $uc($3) Runway $uc($4) final approach course.
.TRH Turn right heading $1.
  .TRHV turn right heading $1, vector $uc($2) Runway $uc($3) approach.
    .TRHVF turn right heading $1, vector to $uc($2) Runway $uc($3) final approach course.
  .TRHCM turn right heading $1, climb and maintain $2.
    .TRHCMV climb and maintain $2, turn right heading $1, vector $uc($3) Runway $uc($4) approach.
      .TRHCMVF climb and maintain $2, turn right heading $1, vector to $uc($3) Runway $uc($4) final approach course.
  .TRHDM turn right heading $1, descend and maintain $2.
    .TRHDMV descend and maintain $2, turn right heading $1, vector $uc($3) Runway $uc($4) approach.
      .TRHDMVF descend and maintain $2, turn right heading $1, vector to $uc($3) Runway $uc($4) final approach course.
.PD proceed direct $uc($1).
  .FHPD fly heading $1. When able, proceed direct $uc($2).
  .PDCM proceed direct $uc($1), climb and maintain $2.
  .PDDM proceed direct $uc($1), descend and maintain $2.
.CM Climb and maintain $1.
.DM Descend and maintain $1.

.HI $radioname().
  .HIFH $radioname(), fly heading $2.
    .HIFHV $radioname(), fly heading $2, vector $uc($3) Runway $uc($4) approach.
      .HIFHVF $radioname(), fly heading $2, vector to $uc($3) Runway $uc($4) final approach course.
    .HIFHCM $radioname(), fly heading $2, climb and maintain $3.
      .HIFHCMV $radioname(), climb and maintain $3, fly heading $2, vector $uc($4) Runway $uc($5) approach.
        .HIFHCMVF $radioname(), climb and maintain $3, fly heading $2, vector to $uc($4) Runway $uc($5) final approach course.
    .HIFHDM $radioname(), fly heading $2, descend and maintain $3.
      .HIFHDMV $radioname(), descend and maintain $3, fly heading $2, vector $uc($4) Runway $uc($5) approach.
        .HIFHDMVF $radioname(), descend and maintain $3, fly heading $2, vector to $uc($4) Runway $uc($5) final approach course.
  .HITLH $radioname(), turn left heading $2.
    .HITLHV $radioname(), turn left heading $2, vector $uc($3) Runway $uc($4) approach.
      .HITLHVF $radioname(), turn left heading $2, vector to $uc($3) Runway $uc($4) final approach course.
    .HITLHCM $radioname(), turn left heading $2, climb and maintain $3.
      .HITLHCMV $radioname(), climb and maintain $3, turn left heading $2, vector $uc($4) Runway $uc($5) approach.
        .HITLHCMVF $radioname(), climb and maintain $3, turn left heading $2, vector to $uc($4) Runway $uc($5) final approach course.
    .HITLHDM $radioname(), turn left heading $2, descend and maintain $3.
      .HITLHDMV $radioname(), descend and maintain $3, turn left heading $2, vector $uc($4) Runway $uc($5) approach.
        .HITLHDMVF $radioname(), descend and maintain $3, turn left heading $2, vector to $uc($4) Runway $uc($5) final approach course.
  .HITRH $radioname(), turn right heading $2.
    .HITRHV $radioname(), turn right heading $2, vector $uc($3) Runway $uc($4) approach.
      .HITRHVF $radioname(), turn right heading $2, vector to $uc($3) Runway $uc($4) final approach course.
    .HITRHCM $radioname(), turn right heading $2, climb and maintain $3.
      .HITRHCMV $radioname(), climb and maintain $3, turn right heading $2, vector $uc($4) Runway $uc($5) approach.
        .HITRHCMVF $radioname(), climb and maintain $3, turn right heading $2, vector to $uc($4) Runway $uc($5) final approach course.
    .HITRHDM $radioname(), turn right heading $2, descend and maintain $3.
      .HITRHDMV $radioname(), descend and maintain $3, turn right heading $2, vector $uc($4) Runway $uc($5) approach.
        .HITRHDMVF $radioname(), descend and maintain $3, turn right heading $2, vector to $uc($4) Runway $uc($5) final approach course.
  .HIPD $radioname(), proceed direct $uc($2).
    .HIFHPD $radioname(), fly heading $2. When able, proceed direct $uc($2).
    .HIPDCM $radioname(), proceed direct $uc($2), climb and maintain $3.
    .HIPDDM $radioname(), proceed direct $uc($2), descend and maintain $3.
  .HICM $radioname(), climb and maintain $2.
  .HIDM $radioname(), descend and maintain $2.
.HIA $radioname(), $uc($1) altimeter $altim($1).
  .HIAFH $radioname(), $uc($1) altimeter $altim($1), fly heading $2.
    .HIAFHV $radioname(), $uc($1) altimeter $altim($1), fly heading $2, vector $uc($3) Runway $uc($4) approach.
      .HIAFHVF $radioname(), $uc($1) altimeter $altim($1), fly heading $2, vector to $uc($3) Runway $uc($4) final approach course.
    .HIAFHCM $radioname(), $uc($1) altimeter $altim($1), fly heading $2, climb and maintain $3.
      .HIAFHCMV $radioname(), $uc($1) altimeter $altim($1), climb and maintain $3, fly heading $2, vector $uc($4) Runway $uc($5) approach.
        .HIAFHCMVF $radioname(), $uc($1) altimeter $altim($1), climb and maintain $3, fly heading $2, vector to $uc($4) Runway $uc($5) final approach course.
    .HIAFHDM $radioname(), $uc($1) altimeter $altim($1), fly heading $2, descend and maintain $3.
      .HIAFHDMV $radioname(), $uc($1) altimeter $altim($1), descend and maintain $3, fly heading $2, vector $uc($4) Runway $uc($5) approach.
        .HIAFHDMVF $radioname(), $uc($1) altimeter $altim($1), descend and maintain $3, fly heading $2, vector to $uc($4) Runway $uc($5) final approach course.
  .HIATLH $radioname(), $uc($1) altimeter $altim($1), turn left heading $2.
    .HIATLHV $radioname(), $uc($1) altimeter $altim($1), turn left heading $2, vector $uc($3) Runway $uc($4) approach.
      .HIATLHVF $radioname(), $uc($1) altimeter $altim($1), turn left heading $2, vector to $uc($3) Runway $uc($4) final approach course.
    .HIATLHCM $radioname(), $uc($1) altimeter $altim($1), turn left heading $2, climb and maintain $3.
      .HIATLHCMV $radioname(), $uc($1) altimeter $altim($1), climb and maintain $3, turn left heading $2, vector $uc($4) Runway $uc($5) approach.
        .HIATLHCMVF $radioname(), $uc($1) altimeter $altim($1), climb and maintain $3, turn left heading $2, vector to $uc($4) Runway $uc($5) final approach course.
    .HIATLHDM $radioname(), $uc($1) altimeter $altim($1), turn left heading $2, descend and maintain $3.
      .HIATLHDMV $radioname(), $uc($1) altimeter $altim($1), descend and maintain $3, turn left heading $2, vector $uc($4) Runway $uc($5) approach.
        .HIATLHDMVF $radioname(), $uc($1) altimeter $altim($1), descend and maintain $3, turn left heading $2, vector to $uc($4) Runway $uc($5) final approach course.
  .HIATRH $radioname(), $uc($1) altimeter $altim($1), turn right heading $2.
    .HIATRHV $radioname(), $uc($1) altimeter $altim($1), turn right heading $2, vector $uc($3) Runway $uc($4) approach.
      .HIATRHVF $radioname(), $uc($1) altimeter $altim($1), turn right heading $2, vector to $uc($3) Runway $uc($4) final approach course.
    .HIATRHCM $radioname(), $uc($1) altimeter $altim($1), turn right heading $2, climb and maintain $3.
      .HIATRHCMV $radioname(), $uc($1) altimeter $altim($1), climb and maintain $3, turn right heading $2, vector $uc($4) Runway $uc($5) approach.
        .HIATRHCMVF $radioname(), $uc($1) altimeter $altim($1), climb and maintain $3, turn right heading $2, vector to $uc($4) Runway $uc($5) final approach course.
    .HIATRHDM $radioname(), $uc($1) altimeter $altim($1), turn right heading $2, descend and maintain $3.
      .HIATRHDMV $radioname(), $uc($1) altimeter $altim($1), descend and maintain $3, turn right heading $2, vector $uc($4) Runway $uc($5) approach.
        .HIATRHDMVF $radioname(), $uc($1) altimeter $altim($1), descend and maintain $3, turn right heading $2, vector to $uc($4) Runway $uc($5) final approach course.
  .HIAPD $radioname(), $uc($1) altimeter $altim($1), proceed direct $uc($2).
    .HIAFHPD $radioname(), $uc($1) altimeter $altim($1), fly heading $2. When able, proceed direct $uc($3).
    .HIAPDCM $radioname(), $uc($1) altimeter $altim($1), proceed direct $uc($2), climb and maintain $3.
    .HIAPDDM $radioname(), $uc($1) altimeter $altim($1), proceed direct $uc($2), descend and maintain $3.
  .HIACM $radioname(), $uc($1) altimeter $altim($1), climb and maintain $2.
  .HIADM $radioname(), $uc($1) altimeter $altim($1), descend and maintain $2.

----- Speed Control Instructions -----
.RS reduce speed to $1.
  .RSM reduce speed to mach $1
.IS increase speed to $2.
  .ISM increase speed to mach $1
.MS maintain $1 knots.
  .MM maintain mach $1
.DNE do not exceed $1 knots
  .DNEM do not exceed mach $1
.MFS maintain maximum forward speed.
.SPS maintain slowest practical speed.
.RFAS reduce to final approach speed.
.CSR cancel speed restriction.
  .RNS resume normal speed.

----- Visual Approach Clearances -----
.APRT $arr $oclock($arr), $dist($arr) miles. Report the field in sight.
  .VA cleared visual approach Runway $uc($1).
.FTCVA follow that traffic, cleared visual approach Runway $uc($1).

----- Instrument Approach Clearances -----
.LOC intercept Runway $uc($1) localizer.
.PTAC $1 miles from from $uc($2), fly heading $3, maintain $4 until established on the localizer, cleared $uc($5) Runway $uc($6) approach.
  .PTACR $1 miles from from $uc($2), turn right heading $3, maintain $4 until established on the localizer, cleared $uc($5) Runway $uc($6) approach.
  .PTACL $1 miles from from $uc($2), turn left heading $3, maintain $4 until established on the localizer, cleared $uc($5) Runway $uc($6) approach.
.PAC  $1 miles from from $uc($2), fly heading $3, maintain $4 until established on the localizer, cleared $uc($5) Runway $uc($6) approach.
.PC  $1 miles from from $uc($2), fly heading $3, maintain $4 until established on the localizer, cleared $uc($5) Runway $uc($6) approach.

----- Crossing Restrictions -----
.XAA cross $uc($1) at or above $2.
  .XAAS cross $uc($1) at or above $2, $3 knots.
.XAB cross $uc($1) at or below $2.
  .XABS cross $uc($1) at or below $2, $3 knots.
.XAB cross $uc($1) at or below $2.
  .XABS cross $uc($1) at or below $2, $3 knots.
.XAM cross $uc($1) at and maintain $2.
  .XAMS cross $uc($1) at and maintain $2, $3 knots.
.XATDPT cross $uc($1) at $2.. After $uc($1), depart $uc($1) heading $3.

----- Reports -----
.RL report leaving $1.
.RP report passing $2.
.RX report crossing $3.
.RE report established on $4.
.RRTOD Report reaching top of descent.



********************************************************************************
                                    UNICOM
********************************************************************************
.RST radar services terminated, change to advisory frequency approved.
  .RSTNTO no observed traffic between you and $arr. Radar services terminated, change to advisory frequency approved.
  .RSTRCI report cancellation of IFR this frequency. Radar services terminated, change to advisory frequency approved.
  .RSTNTORCI no traffic observed between you and $arr. Report cancellation of IFR this frequency. Radar services terminated, change to advisory frequency approved.
.BYE departing my airspace, no further ATC available. Change to advisory frequency approved.
  .BYEV departing my airspace, no further ATC available. Squawk VFR, change to advisory frequency approved.
  .BYEUP climbing out of my airspace, no further ATC available. Change to advisory frequency approved.
  .BYEDOWN descending out of my airsapce, no further ATC available. Change to advisory frequency approved.
  .BYERST departing my airspace, no further ATC available. Radar services terminated, change to advisory frequency approved.
    .BYERSTV departing my airspace, no further ATC available. Radar services terminated, squawk VFR, change to advisory frequency approved.
    .BYERSTUP climbing out of my airspace, no further ATC available. Radar services terminated, change to advisory frequency approved.
    .BYERSTDOWN descending out of my airsapce, no further ATC available. Radar services terminated, change to advisory frequency approved.
.ICR IFR cancellation received, $time. Radar services terminated, squawk VFR, change to advisory frequency approved.



********************************************************************************
                         PRE-DEPARTURE CLEARANCES (PDC)
********************************************************************************
.pdcp *PRE-DEPARTURE CLEARANCE START*||CALLSIGN: $aircraft||$time ZULU||XPNDR: $squawk||CRUISE: $cruise||DEPT: $uc($dep)||ARR: $uc($arr)||EQUIPMENT: $type($aircraft)||APPROVED ROUTE: $route||DEPARTURE FREQ: $freq($1) ||GROUND FREQ: $freq($2) ||ALTITUDE RESTRICTIONS: $temp ||EXPECT FINAL CRUISE ALTITUDE 10 MINUTES AFTER DEPARTURE.||SID INFORMATION: RNAV DEPARTURES ARE RUNWAY DEPENDENT AND SPECIFICALLY MARKED "RNAV." CONFIRM FIRST RNAV FIX WITH TOWER PRIOR TO DEPARTURE.||
.pdcv *PRE-DEPARTURE CLEARANCE START*||CALLSIGN: $aircraft||$time ZULU||XPNDR: $squawk||CRUISE: $cruise||DEPT: $uc($dep)||ARR: $uc($arr)||EQUIPMENT: $type($aircraft)||APPROVED ROUTE: $route||DEPARTURE FREQ: $freq($1) ||GROUND FREQ: $freq($2) ||ALTITUDE RESTRICTIONS: MAINTAIN $temp.||EXPECT FINAL CRUISE ALTITUDE 10 MINUTES AFTER DEPARTURE.||CONFIRM HEADING WITH TOWER PRIOR TO DEPARTURE.||
.pdcs *PRE-DEPARTURE CLEARANCE START*||CALLSIGN: $aircraft||$time ZULU||XPNDR: $squawk||CRUISE: $cruise||DEPT: $uc($dep)||ARR: $uc($arr)||EQUIPMENT: $type($aircraft)||APPROVED ROUTE: $route||DEPARTURE FREQ: $freq($1) ||GROUND FREQ: $freq($2) ||ALTITUDE RESTRICTIONS: CLIMB VIA SID.||EXPECT FINAL CRUISE ALTITUDE 10 MINUTES AFTER DEPARTURE.||SID INFORMATION: RNAV DEPARTURES ARE RUNWAY DEPENDENT AND SPECIFICALLY MARKED "RNAV." CONFIRM FIRST RNAV FIX WITH TOWER PRIOR TO DEPARTURE.||
.pdce *PRE-DEPARTURE CLEARANCE START*||CALLSIGN: $aircraft||$time ZULU||XPNDR: $squawk||CRUISE: $cruise||DEPT: $uc($dep)||ARR: $uc($arr)||EQUIPMENT: $type($aircraft)||APPROVED ROUTE: $route||DEPARTURE FREQ: $freq($1) ||GROUND FREQ: $freq($2) ||ALTITUDE RESTRICTIONS: CLIMB VIA SID, EXCEPT MAINTAIN $temp.||EXPECT FINAL CRUISE ALTITUDE 10 MINUTES AFTER DEPARTURE.||SID INFORMATION: RNAV DEPARTURES ARE RUNWAY DEPENDENT AND SPECIFICALLY MARKED "RNAV." CONFIRM FIRST RNAV FIX WITH TOWER PRIOR TO DEPARTURE.||
.pdc2 ADDITIONAL INFORMATION: DO NOT REPLY TO THIS MESSAGE. GROUND WILL ASSIGN DEPARTURE RUNWAY WITH TAXI INSTRUCTIONS. WHEN READY FOR TAXI, CONTACT APPROPRIATE GROUND CONTROL WITH XPNDR CODE AND CURRENT ATIS, IF AVAILABLE. THIS MESSAGE SERVES AS YOUR PRE-DEPARTURE CLEARANCE.CONTACT APPROPRIATE CLEARANCE DELIVERY ONLY IF YOU HAVE QUESTIONS REGARDING YOUR CLEARANCE.||*PRE-DEPARTURE CLEARANCE END*
.pdc2p ADDITIONAL INFORMATION: DO NOT REPLY TO THIS MESSAGE. GROUND WILL ASSIGN DEPARTURE RUNWAY WITH TAXI INSTRUCTIONS. CONTACT RAMP CONTROL WITH ASSIGNED XPNDR CODE AND CURRENT ATIS, IF AVAILABLE, FOR PUSH INSTRUCTIONS. THIS MESSAGE SERVES AS YOUR PRE-DEPARTURE CLEARANCE. CONTACT APPROPRIATE CLEARANCE DELIVERY ONLY IF YOU HAVE QUESTIONS REGARDING YOUR CLEARANCE.||*PRE-DEPARTURE CLEARANCE END*



********************************************************************************
                               VRC CONFIGURATION
********************************************************************************
-----WEATHER-----
.WXGROUP1 .qd KMIA KFLL KTPA KRSW KPBI KSRQ
.WXGROUP2 .qd KMIA KFLL KOPF KTMB KFXE KHWO
.WXGROUP3 .qd KTPA KSRQ KLAL KPIE

-----DEPARTURE GATES-----
.GMIAT .ff ARKES BEECH EONNS HEDLY MNATE PADUS PREDA SKIPS THNDR VALLY WINCO ZAPPA
.GMIA .ff BEECH EONNS HEDLY MNATE PADUS SKIPS VALLY WINCO
.GFLL .ff ARKES BEECH MNATE PREDA THNDR ZAPPA
.GTPA .fv CTY GNV LAL OCF ORL PHK PIE RSW SRQ SZW TAY
.GTPA2 .ff COVIA
.GPBI .fv CTY DHP EYW FLL FPR LAL LBV MTH ORL PHK PIE RSW SRQ TRV VKZ ZBV ZFP
.GPBI2 .ff BAIRN HEATT PERMT
.GRSW .fv CYY FLL EYW LAL LBV ORL PIE PHK SRQ
.GEYW .ff CARNU MAXIM CANOA

-----ILS FIXES-----
.IMIA .ff PABOY LICEY JODAX HINKU COPRA LAWNN ZILBI BASHO AGLER GRITT INESS CHHAZ SARCO HENDN GLRIA PIANA VEPCO BIRDD OLDDE SHANN
.IMIAN .ff PABOY LICEY JODAX HINKU
.IMIAC .ff KROME COPRA LAWNN ZILBI BASHO AGLER
.IMIAS .ff GRITT INESS CHHAZ SARCO HENDN
.IMIAX .ff GLRIA PIANA VEPCO BIRDD OLDDE SHANN
.IFLL .ff HOLID PIONN NOVAE SNAPE JUMAR BUNKR BEZER LORII YOBUS WIKIR ZADIL
.IFLLN .ff HOLID PIONN NOVAE SNAPE JUMAR
.IFLLS .ff BUNKR BEZER LORII YOBUS WIKIR ZADIL



********************************************************************************
                                     CPDLC
********************************************************************************
.dlc .msg $aircraft - ATC UPLINK - CLEARED TO $arr ARPT $uc($1) THEN AS FILED. CLIMB VIA SID. EXPECT $cruise 10 MIN AFT DP, DPFRQ $freq($2). SQUAWK $squawk CONTACT GRND WITH ATIS.
.dlcp .msg $aircraft - ATC UPLINK - CLEARED TO $arr ARPT $uc($1) THEN AS FILED. CLIMB VIA SID. EXPECT $cruise 10 MIN AFT DP, DPFRQ $freq($2). SQUAWK $squawk CONTACT GRND WITH ATIS FOR PUSHBACK.
.dlx .msg $aircraft - ATC UPLINK - CLEARED ROUTE CLEARANCE. $uc($1). CLIMB VIA SID. EXPECT $cruise 10 MIN AFT DP, DPFRQ $freq($2). SQUAWK $squawk CONTACT GRND WITH ATIS. MOD RTE $route. ADV ACCEPT/REJECT RTE.
.dlxp .msg $aircraft - ATC UPLINK - CLEARED ROUTE CLEARANCE. $uc($1). CLIMB VIA SID. EXPECT $cruise 10 MIN AFT DP, DPFRQ $freq($2). SQUAWK $squawk CONTACT GRND WITH ATIS FOR PUSHBACK. MOD RTE $route. ADV ACCEPT/REJECT RTE.



********************************************************************************
                      LEGACY ALIASES SCHEDULED FOR REMOVAL
********************************************************************************
.STAR cross $uc($1) at and maintain $2, $3 kts.
.STARN cross $uc($1) at and maintain $2.
.STARJ proceed direct $uc($1), rejoin the $uc($2).
.WAKES .sticky Wake Turbulence Separation| |Departures| |2 minutues -- Small/large behind a heavy jet (same threshold)|3 minutes -- Small/larget behind a heavy jet (intersection)| |Enroute| |Heavy jet behind heavy jet -- 4 miles|Large or heavy behind B757 -- 4 miles|Small behind B757 -- 5 miles|Small or large aircraft behind heavy jet -- 5 miles|Super behind super -- 4 miles|Heavy jet behind super -- 6 miles|Large behind super -- 8 miles|Small behind super -- 10 miles| |Arrival (small only)| |Small aircraft landing behind super -- 10 miles|Small aircraft landing behind heavy jet -- 6 miles|Small aircraft landing behind B757 -- 5 miles|Small aircraft landing behind large aircraft -- 4 miles| |Categories Defined| |Super -- A380 only|Heavy -- AOB 300,000 lbs.|Large -- 41,000-299,999 lbs.|Small -- < 41,000 lbs.
.nowake .nostickies
.linkup .sticky LINK ESTABLISHED| |VZMA INTRANET CONNECTION ONLINE| |PROCESSING DATALINK...
